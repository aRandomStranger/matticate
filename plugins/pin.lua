local function action(msg, blocks)
	if blocks[1] == 'pin' then
		if roles.is_admin_cached(msg) then
			if not blocks[2] then
				local pin_id = db:get('chat:' .. msg.chat.id .. ':pin')
				if pin_id then
					api.sendMessage(msg.chat.id, 'Last message generated by /pin', true, pin_id)
				end
				return
			end
			local res, code = api.sendMessage(msg.chat.id, blocks[2]:gsub('$rules', misc.deeplink_constructor(msg.chat.id, 'rules')), true)
			if not res then
				if code == 118 then
					api.sendMessage(msg.chat.id, 'I can\'t send that message because it\'s too long.')
				else
					api.sendMessage(msg.chat.id, 'This text breaks the markdown.\n', true)
				end
			else
				db:set('chat:' .. msg.chat.id .. ':pin', res.result.message_id)
				api.sendMessage(msg.chat.id, 'You can now pin this message and use /editpin <text> to edit it, without sending a new block of text to pin again.', true, res.result.message_id)
			end
		end
	end
	if blocks[1] == 'editpin' then
		if roles.is_admin_cached(msg) then
			local pin_id = db:get('chat:' .. msg.chat.id .. ':pin')
			if not pin_id then
				api.sendReply(msg, 'You don\'t have a pinned message set with /pin.', true)
			else
				local res, code = api.editMessageText(msg.chat.id, pin_id, blocks[2]:gsub('$rules', misc.deeplink_constructor(msg.chat.id, 'rules')), nil, true)
				if not res then
					if code == 118 then
						api.sendMessage(msg.chat.id, 'I can\'t send that message because it\'s too long.')
					elseif code == 116 then
						api.sendMessage(msg.chat.id, 'The original message I sent for you to pin no longer exists, so I can\'t edit it...', true)
					elseif code == 111 then
						api.sendMessage(msg.chat.id, 'The text was not modified.', true)
					else
						api.sendMessage(msg.chat.id, 'This text breaks the markdown.\n', true)
					end
				else
					db:set('chat:' .. msg.chat.id .. ':pin', res.result.message_id)
					api.sendMessage(msg.chat.id, 'The message has been edited.', nil, pin_id)
				end
			end
		end
	end
end
return {
	action = action,
	triggers = {
		config.cmd .. '(pin)$',
		config.cmd .. '(pin) (.*)$',
		config.cmd .. '(editpin) (.*)$',
	}
}